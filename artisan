#!/usr/bin/env php
<?php

define('LARAVEL_START', microtime(true));

/*
|--------------------------------------------------------------------------
| Register The Auto Loader
|--------------------------------------------------------------------------
|
| Composer provides a convenient, automatically generated class loader
| for our application. We just need to utilize it! We'll require it
| into the script here so that we do not have to worry about the
| loading of any our classes "manually". Feels great to relax.
|
*/

require __DIR__.'/vendor/autoload.php';

// $app = require_once __DIR__.'/bootstrap/app.php';

$config = require_once __DIR__ . '/config/plugin_core.php';

class Kernel extends App\Console\Kernel
{
    protected function commands()
    {
        // Para adicionar comandos adicionais no artisan local
        // $this->commands = [];
        return parent::commands();
    }
}

class Application extends Illuminate\Foundation\Application
{
    public function useModuleNamespace(string $namespace)
    {
        $this->namespace = $namespace;
    }
}

$app = new \Application(
    $_ENV['APP_BASE_PATH'] ?? __DIR__.'/vendor/laravel/laravel'
);
$app->useModuleNamespace("App\\Plugin\\{$config['plugin_namespace']}\\");
$app->useAppPath(__DIR__ . '/app');
$app->useDatabasePath(__DIR__ . '/database');
$app->useStoragePath($config['laravel_path'] . '/storage');
$app->useEnvironmentPath($config['laravel_path']);

$app->singleton(
    Illuminate\Contracts\Console\Kernel::class,
    \Kernel::class
);

$app->singleton(
    Illuminate\Contracts\Debug\ExceptionHandler::class,
    App\Exceptions\Handler::class
);

/*
|--------------------------------------------------------------------------
| Run The Artisan Application
|--------------------------------------------------------------------------
|
| When we run the console application, the current CLI command will be
| executed in this console and the response sent back to a terminal
| or another output device for the developers. Here goes nothing!
|
*/

$kernel = $app->make(Illuminate\Contracts\Console\Kernel::class);

$status = $kernel->handle(
    $input = new Symfony\Component\Console\Input\ArgvInput,
    new Symfony\Component\Console\Output\ConsoleOutput
);

/*
|--------------------------------------------------------------------------
| Shutdown The Application
|--------------------------------------------------------------------------
|
| Once Artisan has finished running, we will fire off the shutdown events
| so that any final work may be done by the application before we shut
| down the process. This is the last thing to happen to the request.
|
*/

$kernel->terminate($input, $status);

exit($status);
